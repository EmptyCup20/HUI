0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'install',
1 verbose cli   '--save-dev',
1 verbose cli   'memwatch' ]
2 info using npm@2.14.12
3 info using node@v4.2.5
4 verbose install initial load of E:\work\HUI\HUI\package.json
5 warn package.json HUI@1.0.0 No repository field.
6 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\archiver\package.json
7 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\bluebird\package.json
8 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\body-parser\package.json
9 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\browser-sync\package.json
10 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\co\package.json
11 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\ejs\package.json
12 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\eventproxy\package.json
13 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\express\package.json
14 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\formidable\package.json
15 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\fs\package.json
16 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\gulp\package.json
17 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\gulp-less\package.json
18 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\log4js\package.json
19 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\markdown\package.json
20 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\moment\package.json
21 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\mongodb\package.json
22 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\mongodb-core\package.json
23 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\mongoose\package.json
24 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\morgan\package.json
25 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\node-uuid\package.json
26 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\request\package.json
27 verbose installManyTop reading scoped package data from E:\work\HUI\HUI\node_modules\showdown\package.json
28 info package.json fs@0.0.1-security fs is also the name of a node core module.
29 info package.json markdown@0.5.0 No license field.
30 info package.json node-uuid@1.4.7 No license field.
31 verbose readDependencies loading dependencies from E:\work\HUI\HUI\package.json
32 silly cache add args [ 'memwatch', null ]
33 verbose cache add spec memwatch
34 silly cache add parsed spec Result {
34 silly cache add   raw: 'memwatch',
34 silly cache add   scope: null,
34 silly cache add   name: 'memwatch',
34 silly cache add   rawSpec: '',
34 silly cache add   spec: 'latest',
34 silly cache add   type: 'tag' }
35 silly addNamed memwatch@latest
36 verbose addNamed "latest" is being treated as a dist-tag for memwatch
37 info addNameTag [ 'memwatch', 'latest' ]
38 silly mapToRegistry name memwatch
39 silly mapToRegistry using default registry
40 silly mapToRegistry registry https://registry.npmjs.org/
41 silly mapToRegistry uri https://registry.npmjs.org/memwatch
42 verbose addNameTag registry:https://registry.npmjs.org/memwatch not in flight; fetching
43 verbose request uri https://registry.npmjs.org/memwatch
44 verbose request no auth needed
45 info attempt registry request try #1 at 16:17:16
46 verbose request id cda22444cbee64e8
47 verbose etag W/"589e8512-9399"
48 verbose lastModified Sat, 11 Feb 2017 03:29:22 GMT
49 http request GET https://registry.npmjs.org/memwatch
50 http 304 https://registry.npmjs.org/memwatch
51 verbose headers { date: 'Thu, 30 Mar 2017 08:17:17 GMT',
51 verbose headers   via: '1.1 varnish',
51 verbose headers   'cache-control': 'max-age=300',
51 verbose headers   etag: 'W/"589e8512-9399"',
51 verbose headers   age: '0',
51 verbose headers   connection: 'keep-alive',
51 verbose headers   'x-served-by': 'cache-nrt6126-NRT',
51 verbose headers   'x-cache': 'HIT',
51 verbose headers   'x-cache-hits': '1',
51 verbose headers   'x-timer': 'S1490861837.074609,VS0,VE188',
51 verbose headers   vary: 'Accept-Encoding' }
52 silly get cb [ 304,
52 silly get   { date: 'Thu, 30 Mar 2017 08:17:17 GMT',
52 silly get     via: '1.1 varnish',
52 silly get     'cache-control': 'max-age=300',
52 silly get     etag: 'W/"589e8512-9399"',
52 silly get     age: '0',
52 silly get     connection: 'keep-alive',
52 silly get     'x-served-by': 'cache-nrt6126-NRT',
52 silly get     'x-cache': 'HIT',
52 silly get     'x-cache-hits': '1',
52 silly get     'x-timer': 'S1490861837.074609,VS0,VE188',
52 silly get     vary: 'Accept-Encoding' } ]
53 verbose etag https://registry.npmjs.org/memwatch from cache
54 verbose get saving memwatch to C:\Users\zhengjunling\AppData\Roaming\npm-cache\registry.npmjs.org\memwatch\.cache.json
55 silly addNameTag next cb for memwatch with tag latest
56 silly addNamed memwatch@0.2.2
57 verbose addNamed "0.2.2" is a plain semver version for memwatch
58 silly cache afterAdd memwatch@0.2.2
59 verbose afterAdd C:\Users\zhengjunling\AppData\Roaming\npm-cache\memwatch\0.2.2\package\package.json not in flight; writing
60 verbose afterAdd C:\Users\zhengjunling\AppData\Roaming\npm-cache\memwatch\0.2.2\package\package.json written
61 silly install resolved [ { name: 'memwatch',
61 silly install resolved     description: 'Keep an eye on your memory usage, and discover and isolate leaks.',
61 silly install resolved     version: '0.2.2',
61 silly install resolved     author: { name: 'Lloyd Hilaiel', url: 'http://lloyd.io' },
61 silly install resolved     engines: { node: '>= 0.6.0' },
61 silly install resolved     repository:
61 silly install resolved      { type: 'git',
61 silly install resolved        url: 'git+https://github.com/lloyd/node-memwatch.git' },
61 silly install resolved     main: 'include.js',
61 silly install resolved     licenses: [ [Object] ],
61 silly install resolved     bugs: { url: 'https://github.com/lloyd/node-memwatch/issues' },
61 silly install resolved     scripts: { install: 'node-gyp rebuild', test: 'mocha tests' },
61 silly install resolved     devDependencies: { mocha: '1.2.2', should: '0.6.3', 'node-gyp': '0.5.7' },
61 silly install resolved     contributors: [ [Object], [Object], [Object] ],
61 silly install resolved     readme: '`node-memwatch`: Leak Detection and Heap Diffing for Node.JS\n============================================================\n\n[![Build Status](https://secure.travis-ci.org/lloyd/node-memwatch.png)](http://travis-ci.org/lloyd/node-memwatch)\n\n`node-memwatch` is here to help you detect and find memory leaks in\nNode.JS code.  It provides:\n\n- A `leak` event, emitted when it appears your code is leaking memory.\n\n- A `stats` event, emitted occasionally, giving you\n  data describing your heap usage and trends over time.\n\n- A `HeapDiff` class that lets you compare the state of your heap between\n  two points in time, telling you what has been allocated, and what\n  has been released.\n\n\nInstallation\n------------\n\n- `npm install memwatch`\n\nor\n\n- `git clone git://github.com/lloyd/node-memwatch.git`\n\n\nDescription\n-----------\n\nThere are a growing number of tools for debugging and profiling memory\nusage in Node.JS applications, but there is still a need for a\nplatform-independent native module that requires no special\ninstrumentation.  This module attempts to satisfy that need.\n\nTo get started, import `node-memwatch` like so:\n\n```javascript\nvar memwatch = require(\'memwatch\');\n```\n\n### Leak Detection\n\nYou can then subscribe to `leak` events.  A `leak` event will be\nemitted when your heap usage has increased for five consecutive\ngarbage collections:\n\n```javascript\nmemwatch.on(\'leak\', function(info) { ... });\n```\n\nThe `info` object will look something like:\n\n```javascript\n{ start: Fri, 29 Jun 2012 14:12:13 GMT,\n  end: Fri, 29 Jun 2012 14:12:33 GMT,\n  growth: 67984,\n  reason: \'heap growth over 5 consecutive GCs (20s) - 11.67 mb/hr\' }\n```\n\n\n### Heap Usage\n\nThe best way to evaluate your memory footprint is to look at heap\nusage right aver V8 performs garbage collection.  `memwatch` does\nexactly this - it checks heap usage only after GC to give you a stable\nbaseline of your actual memory usage.\n\nWhen V8 performs a garbage collection (technically, we\'re talking\nabout a full GC with heap compaction), `memwatch` will emit a `stats`\nevent.\n\n```javascript\nmemwatch.on(\'stats\', function(stats) { ... });\n```\n\nThe `stats` data will look something like this:\n\n```javascript\n{\n  "num_full_gc": 17,\n  "num_inc_gc": 8,\n  "heap_compactions": 8,\n  "estimated_base": 2592568,\n  "current_base": 2592568,\n  "min": 2499912,\n  "max": 2592568,\n  "usage_trend": 0\n}\n```\n\n`estimated_base` and `usage_trend` are tracked over time.  If usage\ntrend is consistently positive, it indicates that your base heap size\nis continuously growing and you might have a leak.\n\nV8 has its own idea of when it\'s best to perform a GC, and under a\nheavy load, it may defer this action for some time.  To aid in\nspeedier debugging, `memwatch` provides a `gc()` method to force V8 to\ndo a full GC and heap compaction.\n\n\n### Heap Diffing\n\nSo far we have seen how `memwatch` can aid in leak detection.  For\nleak isolation, it provides a `HeapDiff` class that takes two snapshots\nand computes a diff between them.  For example:\n\n```javascript\n// Take first snapshot\nvar hd = new memwatch.HeapDiff();\n\n// do some things ...\n\n// Take the second snapshot and compute the diff\nvar diff = hd.end();\n```\n\nThe contents of `diff` will look something like:\n\n```javascript\n{\n  "before": { "nodes": 11625, "size_bytes": 1869904, "size": "1.78 mb" },\n  "after":  { "nodes": 21435, "size_bytes": 2119136, "size": "2.02 mb" },\n  "change": { "size_bytes": 249232, "size": "243.39 kb", "freed_nodes": 197,\n    "allocated_nodes": 10007,\n    "details": [\n      { "what": "String",\n        "size_bytes": -2120,  "size": "-2.07 kb",  "+": 3,    "-": 62\n      },\n      { "what": "Array",\n        "size_bytes": 66687,  "size": "65.13 kb",  "+": 4,    "-": 78\n      },\n      { "what": "LeakingClass",\n        "size_bytes": 239952, "size": "234.33 kb", "+": 9998, "-": 0\n      }\n    ]\n  }\n```\n\nThe diff shows that during the sample period, the total number of\nallocated `String` and `Array` classes decreased, but `Leaking Class`\ngrew by 9998 allocations.  Hmmm.\n\nYou can use `HeapDiff` in your `on(\'stats\')` callback; even though it\ntakes a memory snapshot, which triggers a V8 GC, it will not trigger\nthe `stats` event itself.  Because that would be silly.\n\n\nFuture Work\n-----------\n\nPlease see the Issues to share suggestions and contribute!\n\n\nLicense\n-------\n\nhttp://wtfpl.org\n',
61 silly install resolved     readmeFilename: 'README.md',
61 silly install resolved     _id: 'memwatch@0.2.2',
61 silly install resolved     dist:
61 silly install resolved      { shasum: '779e8cd982532b6221b6ed1c1269098bee16f92c',
61 silly install resolved        tarball: 'https://registry.npmjs.org/memwatch/-/memwatch-0.2.2.tgz' },
61 silly install resolved     _from: 'memwatch@latest',
61 silly install resolved     _npmVersion: '1.2.14',
61 silly install resolved     _npmUser: { name: 'lloyd', email: 'lloyd@hilaiel.com' },
61 silly install resolved     maintainers: [ [Object] ],
61 silly install resolved     directories: {},
61 silly install resolved     _shasum: '779e8cd982532b6221b6ed1c1269098bee16f92c',
61 silly install resolved     _resolved: 'https://registry.npmjs.org/memwatch/-/memwatch-0.2.2.tgz',
61 silly install resolved     gypfile: true,
61 silly install resolved     homepage: 'https://github.com/lloyd/node-memwatch#readme' } ]
62 info install memwatch@0.2.2 into E:\work\HUI\HUI
63 info installOne memwatch@0.2.2
64 verbose installOne of memwatch to E:\work\HUI\HUI not in flight; installing
65 verbose lock using C:\Users\zhengjunling\AppData\Roaming\npm-cache\_locks\memwatch-6a7847bffdec97a4.lock for E:\work\HUI\HUI\node_modules\memwatch
66 silly install write writing memwatch 0.2.2 to E:\work\HUI\HUI\node_modules\memwatch
67 verbose unbuild node_modules\memwatch
68 silly gentlyRm E:\work\HUI\HUI\node_modules\memwatch is being purged from base E:\work\HUI\HUI
69 verbose gentlyRm don't care about contents; nuking E:\work\HUI\HUI\node_modules\memwatch
70 verbose tar unpack C:\Users\zhengjunling\AppData\Roaming\npm-cache\memwatch\0.2.2\package.tgz
71 verbose tar unpacking to E:\work\HUI\HUI\node_modules\memwatch
72 silly gentlyRm E:\work\HUI\HUI\node_modules\memwatch is being purged
73 verbose gentlyRm don't care about contents; nuking E:\work\HUI\HUI\node_modules\memwatch
74 silly gunzTarPerm modes [ '777', '666' ]
75 silly gunzTarPerm extractEntry package.json
76 silly gunzTarPerm modified mode [ 'package.json', 420, 438 ]
77 silly gunzTarPerm extractEntry .npmignore
78 silly gunzTarPerm modified mode [ '.npmignore', 420, 438 ]
79 silly gunzTarPerm extractEntry README.md
80 silly gunzTarPerm modified mode [ 'README.md', 420, 438 ]
81 silly gunzTarPerm extractEntry tests.js
82 silly gunzTarPerm modified mode [ 'tests.js', 420, 438 ]
83 silly gunzTarPerm extractEntry foo.js
84 silly gunzTarPerm modified mode [ 'foo.js', 420, 438 ]
85 silly gunzTarPerm extractEntry include.js
86 silly gunzTarPerm modified mode [ 'include.js', 420, 438 ]
87 silly gunzTarPerm extractEntry .travis.yml
88 silly gunzTarPerm modified mode [ '.travis.yml', 420, 438 ]
89 silly gunzTarPerm extractEntry ChangeLog
90 silly gunzTarPerm modified mode [ 'ChangeLog', 420, 438 ]
91 silly gunzTarPerm extractEntry #wscript#
92 silly gunzTarPerm modified mode [ '#wscript#', 420, 438 ]
93 silly gunzTarPerm extractEntry binding.gyp
94 silly gunzTarPerm modified mode [ 'binding.gyp', 420, 438 ]
95 silly gunzTarPerm extractEntry src/heapdiff.cc
96 silly gunzTarPerm modified mode [ 'src/heapdiff.cc', 420, 438 ]
97 silly gunzTarPerm extractEntry src/heapdiff.hh
98 silly gunzTarPerm modified mode [ 'src/heapdiff.hh', 420, 438 ]
99 silly gunzTarPerm extractEntry src/init.cc
100 silly gunzTarPerm modified mode [ 'src/init.cc', 420, 438 ]
101 silly gunzTarPerm extractEntry src/memwatch.cc
102 silly gunzTarPerm modified mode [ 'src/memwatch.cc', 420, 438 ]
103 silly gunzTarPerm extractEntry src/memwatch.hh
104 silly gunzTarPerm modified mode [ 'src/memwatch.hh', 420, 438 ]
105 silly gunzTarPerm extractEntry src/platformcompat.hh
106 silly gunzTarPerm modified mode [ 'src/platformcompat.hh', 420, 438 ]
107 silly gunzTarPerm extractEntry src/util.cc
108 silly gunzTarPerm modified mode [ 'src/util.cc', 420, 438 ]
109 silly gunzTarPerm extractEntry src/util.hh
110 silly gunzTarPerm modified mode [ 'src/util.hh', 420, 438 ]
111 silly gunzTarPerm extractEntry examples/basic_heapdiff.js
112 silly gunzTarPerm modified mode [ 'examples/basic_heapdiff.js', 420, 438 ]
113 silly gunzTarPerm extractEntry examples/do_nothing_server.js
114 silly gunzTarPerm modified mode [ 'examples/do_nothing_server.js', 420, 438 ]
115 silly gunzTarPerm extractEntry examples/slightly_leaky.js
116 silly gunzTarPerm modified mode [ 'examples/slightly_leaky.js', 420, 438 ]
117 verbose write writing to E:\work\HUI\HUI\node_modules\memwatch\package.json
118 info preinstall memwatch@0.2.2
119 verbose readDependencies loading dependencies from E:\work\HUI\HUI\node_modules\memwatch\package.json
120 verbose readDependencies loading dependencies from E:\work\HUI\HUI\node_modules\memwatch\package.json
121 silly install resolved []
122 verbose about to build E:\work\HUI\HUI\node_modules\memwatch
123 info build E:\work\HUI\HUI\node_modules\memwatch
124 info linkStuff memwatch@0.2.2
125 silly linkStuff memwatch@0.2.2 has E:\work\HUI\HUI\node_modules as its parent node_modules
126 verbose linkBins memwatch@0.2.2
127 verbose linkMans memwatch@0.2.2
128 verbose rebuildBundles memwatch@0.2.2
129 info install memwatch@0.2.2
130 verbose unsafe-perm in lifecycle true
131 info memwatch@0.2.2 Failed to exec install script
132 verbose unlock done using C:\Users\zhengjunling\AppData\Roaming\npm-cache\_locks\memwatch-6a7847bffdec97a4.lock for E:\work\HUI\HUI\node_modules\memwatch
133 verbose stack Error: memwatch@0.2.2 install: `node-gyp rebuild`
133 verbose stack Exit status 1
133 verbose stack     at EventEmitter.<anonymous> (C:\Program Files\nodejs\node_modules\npm\lib\utils\lifecycle.js:214:16)
133 verbose stack     at emitTwo (events.js:87:13)
133 verbose stack     at EventEmitter.emit (events.js:172:7)
133 verbose stack     at ChildProcess.<anonymous> (C:\Program Files\nodejs\node_modules\npm\lib\utils\spawn.js:24:14)
133 verbose stack     at emitTwo (events.js:87:13)
133 verbose stack     at ChildProcess.emit (events.js:172:7)
133 verbose stack     at maybeClose (internal/child_process.js:821:16)
133 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:211:5)
134 verbose pkgid memwatch@0.2.2
135 verbose cwd E:\work\HUI\HUI
136 error Windows_NT 6.1.7601
137 error argv "C:\\Program Files\\nodejs\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "install" "--save-dev" "memwatch"
138 error node v4.2.5
139 error npm  v2.14.12
140 error code ELIFECYCLE
141 error memwatch@0.2.2 install: `node-gyp rebuild`
141 error Exit status 1
142 error Failed at the memwatch@0.2.2 install script 'node-gyp rebuild'.
142 error This is most likely a problem with the memwatch package,
142 error not with npm itself.
142 error Tell the author that this fails on your system:
142 error     node-gyp rebuild
142 error You can get their info via:
142 error     npm owner ls memwatch
142 error There is likely additional logging output above.
143 verbose exit [ 1, true ]
144 verbose unbuild node_modules\memwatch
145 info preuninstall memwatch@0.2.2
146 info uninstall memwatch@0.2.2
147 verbose unbuild rmStuff memwatch@0.2.2 from E:\work\HUI\HUI\node_modules
148 info postuninstall memwatch@0.2.2
149 silly gentlyRm E:\work\HUI\HUI\node_modules\memwatch is being purged from base E:\work\HUI\HUI
150 verbose gentlyRm don't care about contents; nuking E:\work\HUI\HUI\node_modules\memwatch
151 silly vacuum-fs purging E:\work\HUI\HUI\node_modules\memwatch
152 silly vacuum-fs quitting because other entries in E:\work\HUI\HUI\node_modules
